spring:
  application:
    name: trade-enrichment-service
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: trade-enrichment
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    redis:
      host: localhost
      port: 6379
      password:  # Set in production
      database: 0
      timeout: 2000
      connect-timeout: 2000
  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hour in milliseconds
      cache-null-values: false
      use-key-prefix: true
      key-prefix: trade-enrichment

server:
  port: 8082

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    com.example.trade.enrichment: DEBUG

trade-enrichment:
  kafka:
    input-topic: trades.validated
    output-topic: trades.enriched
    error-topic: trades.enrichment.errors
    dead-letter-topic: trades.enrichment.dlq
  cache:
    market-data-ttl: 300000  # 5 minutes in milliseconds
    reference-data-ttl: 3600000  # 1 hour in milliseconds
    max-entries: 10000
  retry:
    max-attempts: 3
    initial-interval: 1000
    multiplier: 2.0
    max-interval: 10000